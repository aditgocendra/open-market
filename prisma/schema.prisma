generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["relationJoins"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id          String        @id @db.Char(3)
  name        String        @unique @db.VarChar(24)
  icon        String        @unique
  createdAt   DateTime      @default(now())
  subCategory SubCategory[]
  Product     Product[]
}

model SubCategory {
  name       String    @unique @db.VarChar(32)
  category   Category  @relation(fields: [idCategory], references: [id])
  idCategory String
  Product    Product[]
}

model User {
  uid       String     @id @default(uuid())
  email     String     @unique @db.VarChar(128)
  username  String     @unique @db.VarChar(24)
  avatar    String?
  password  String
  verified  Boolean    @default(false)
  role      Role       @relation(fields: [roleId], references: [id])
  roleId    String
  store     Store?
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  Location  Location[]
}

model Role {
  id   String @id @default(cuid())
  role String @unique @db.Char(20)
  User User[]
}

model Store {
  id         String    @id @default(cuid())
  name       String    @unique @db.VarChar(24)
  logo       String?
  user       User      @relation(fields: [userId], references: [uid])
  userId     String    @unique
  location   Location  @relation(fields: [locationId], references: [id])
  locationId String    @unique
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  product    Product[]
}

model Location {
  id         String @id @default(cuid())
  province   String
  regencies  String
  district   String
  village    String
  postalCode String @db.Char(5)
  address    String @db.VarChar(256)
  user       User   @relation(fields: [userId], references: [uid])
  userId     String
  store      Store?
}

model Product {
  id              String           @id @default(cuid())
  name            String           @db.VarChar(128)
  price           Int
  category        Category         @relation(fields: [idCategory], references: [id])
  idCategory      String
  subCategory     SubCategory      @relation(fields: [nameSubCategory], references: [name])
  nameSubCategory String
  store           Store            @relation(fields: [idStore], references: [id])
  idStore         String
  detailProduct   DetailProduct?
  productImages   ProductImage[]
  variantProduct  VariantProduct[]
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
}

model ProductImage {
  id        Int     @id @default(autoincrement())
  image     String  @db.VarChar(128)
  isThumb   Boolean @default(false)
  product   Product @relation(fields: [idProduct], references: [id])
  idProduct String
}

model DetailProduct {
  rating      Float   @default(0.0)
  seen        Int     @default(0)
  totalStock  Int     @default(0)
  totalSold   Int     @default(0)
  totalFav    Int     @default(0)
  description String  @db.VarChar(256)
  product     Product @relation(fields: [idProduct], references: [id])
  idProduct   String  @unique
}

model VariantProduct {
  id        Int     @id @default(autoincrement())
  variant   String  @db.VarChar(24)
  price     Int
  stock     Int     @default(0)
  image     String? @db.VarChar(128)
  product   Product @relation(fields: [idProduct], references: [id])
  idProduct String
}
